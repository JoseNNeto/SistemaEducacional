spring.application.name=sitemaeducacional

# Configuração do H2 Datasource
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Configuração do Console H2 (pra tu bisbilhotar o banco no navegador)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console 
# Depois de iniciar a aplicação, acessa http://localhost:8080/h2-console
# No campo JDBC URL, usa o mesmo valor: jdbc:h2:mem:testdb

# Configuração do JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# 'create-drop': O Hibernate cria o schema quando a aplicação sobe e apaga quando desce. Ótimo pra testes!
# Se preferir que o schema seja mantido entre reinícios (para H2 baseado em arquivo), use 'update'.
# Para 'data.sql' funcionar bem com schema gerado pelo JPA, 'create' ou 'create-drop' são ideais.
spring.jpa.hibernate.ddl-auto=create-drop 

# Defer datasource initialization to ensure schema is created by Hibernate before data.sql runs
# Isso é importante se o Hibernate está criando o schema (ddl-auto=create, create-drop, update)
# e você quer que data.sql popule esse schema.
spring.jpa.defer-datasource-initialization=true 